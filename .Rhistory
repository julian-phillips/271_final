d = rnorm(1000, 0, 1) #draw from a standard normal distribution
z1 <- d #use random noise from above
for(t in 2:length(d)) {
z1[t] <- 0.9 * z1[t - 1] + d[t]
}
hist(z1, xlab = "Simulated AR(1) Model values", main = "Histogram of 0.9 simulated AR(1)")
plot.ts(z1, xlab = "Simulated Time Period", ylab = "Simulated AR(1) Model Values", main = "Time Series Plot of 0.9 Simulated AR(1) Model", col = "blue")
hist(z2, xlab = "Simulated AR(1) Model values", main = "Histogram of 0.2 simulated AR(1)")
z2 <- d #use random noise from above
for(t in 2:length(d)) {
z2[t] <- 0.2 * z2[t - 1] + d[t]
}
hist(z2, xlab = "Simulated AR(1) Model values", main = "Histogram of 0.2 simulated AR(1)")
plot.ts(z2, xlab = "Simulated Time Period", ylab = "Simulated AR(1) Model Values", main = "Time Series Plot of 0.2 Simulated AR(1) Model", col = "blue")
?par
linDet <- 10 + 0.5 * length(d)
linDet <- 10 + 0.5 * (1:length(d))
rw1 <- cumsum(d)
rwd <- 0.5 + d
rw2 <- cumsum(rwd)
plot.ts(rw2, xlab = "Simulated Time Period", ylab = "Simulated Values", main = "Random Walk With and Without Drift and Linear Model Simulation", col = "blue")
lines(rw1, col = "purple")
lines(linDet, col = "green", lty = "dashed")
rands <- rnorm(500, 0, 1)
randWalk2 <- cumsum(rands)
summary(randWalk2)
sd(randWalk2)
mean()
mean(randWalk2)
str(randWalk)
str(randWalk2)
?plot
plot.ts(randWalk2)
plot.ts(randWalk2, xlab = "Simulated Time Period", ylab = "Simulated Random Walk Values", main = "Random Walk with No Drift Time Series", col = "blue")
?plot.ts
acf(randWalk2)
title("Correlogram for Random Walk with No Drift Model")
acf(randWalk2, main = "Correlogram for Random Walk with No Drift")
pacf(randWalk2, main = "Partial Autocorrelation for Random Walk with No Drift")
getwd()
?polyroot
polyroot(0.95)
polyroot(c(0.95))
polyroot(c(0.8, 0.3))
polyroot(c(1, 0.95))
polyroot(c(1, 0.8, 0.3))
polyroot(c(1, -0.5, 0.5))
polyroot(c(1, 1, 0.4))
polyroot(c(1, -0.5, -0.25))
getwd()
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
acf(x, main="")
acf(arfit$resid[3:100], main="Autocorrelation of Time Series Residuals")
arfit <- ar(x, method = "ols")
polyroot(arfit$ar)
arfit <- ar(x, method = "ols")
arfit
acf(arfit$resid[3:100], main="Autocorrelation of Time Series Residuals")
hist(arfit$resid)
plot.ts(arfit$resid, main="Simulated Random Noise Time Series",col="blue", ylab="Values", xlab="Simulated Time Period")
qqPlot(arfit$resid, main="QQ Plot of Residuals", ylab="Residuals")
series ,- read.table("series.csv", quote = "\"", comment.car = "")
series= read.table("series.csv", quote = "\"", comment.car = "")
series <- read.table("~/Documents/Lab2/series.csv", quote="\"", comment.char="")
ind = seq(from = 1, to = 75)
df = data.frame(ind,series)
arfit <- ar(df$V1, method = "ols")
arfit$asy.var
arfit <- ar(df$V1, method = "yw")
arfit$asy.var
arfit <- ar(df$V1, method = "mle")
ts = ggplot(df, aes(x=ind, y=V1)) + geom_line() + ggtitle("Time Series")+ scale_x_continuous("Series") + scale_y_continuous("Value")
library(ggplot)
library(ggplot2)
ts = ggplot(df, aes(x=ind, y=V1)) + geom_line() + ggtitle("Time Series")+ scale_x_continuous("Series") + scale_y_continuous("Value")
ts
arfit$asy.var.coef
arfit$asy.var
arfit <- ar(df$V1, method = "ols")
arfit$asy.var.coef
arfit$asy.var.se
arfit$asy.se
arfit <- ar(df$V1, method = "mle")
arfit$asy.se
arfit$asy.var.coef
arfit
sqrt(arfit$asy.var)
arfit <- ar(df$V1, method = "yw")
sqrt(arfit$asy.var)
arfit$asy.var[1,2]
arfit <- ar(df$V1, method = "mle")
arfit$asy.var[1,2]
arfit$asy.var
arfit$asy.var[2,2]
set.seed(898)
x3 <- arima.sim(n = 1000, list(ar = c(1.5, -.9), ma=0))
x3.arfit <- ar(x3, method = "mle") #AR estimates a series of AR models up to order 12 (by default)
x3.arfit$aic   # AICs of the fit models
sqrt(x3.arfit$asy.var) # asy. standard error
set.seed(898)
x3 <- arima.sim(n = 1000, list(ar = c(1.5, -.9), ma=0))
x3.arfit <- ar(x3, method = "mle") #AR estimates a series of AR models up to order 12 (by default)
sqrt(x3.arfit$asy.var) # asy. standard error
x3.arfit$asy.var
x3.arfit$ar + c(-2,2)*sqrt(x3.arfit$asy.var)
library(astsa)    # Time series package by Shummway and Stoffer
library(zoo)      # time series package
library(forecast)
library(quantmod) # Financial time series package
install.packages("quantmod")
library(quantmod)
theta = seq(-2,2,0.01)
rho = theta/(1+theta^2)
plot(theta, rho, xlab=expression(~~~theta),
ylab=expression(~~~theta/(1+theta^2)),
main = "Theoretical ACF of MA(1)")
set.seed(898)
ma1a <- arima.sim(list(order=c(0,0,1), ma=.9), n=100)
set.seed(898)
ma1b <- arima.sim(list(order=c(0,0,1), ma=-.9), n=100)
set.seed(898)
ma1c <- arima.sim(list(order=c(0,0,1), ma=.5), n=100)
set.seed(898)
ma1d <- arima.sim(list(order=c(0,0,1), ma=-.5), n=100)
str(ma1a)
hist(ma1a, ylab="value", main=(expression(MA(1)~~~theta==+.9)))
hist(ma1b, ylab="x", main=(expression(MA(1)~~~theta==-.9)))
hist(ma1c, ylab="x", main=(expression(MA(1)~~~theta==+.5)))
hist(ma1d, ylab="x", main=(expression(MA(1)~~~theta==-.5)))
plot(ma1a, ylab="value", main=(expression(MA(1)~~~theta==+.9)))
plot(ma1b, ylab="x", main=(expression(MA(1)~~~theta==-.9)))
plot(ma1c, ylab="x", main=(expression(MA(1)~~~theta==+.5)))
plot(ma1d, ylab="x", main=(expression(MA(1)~~~theta==-.5)))
par(mfrow(c(2,2)))
par(mfrow=c(2,2))
acf(ma1a,main="Fig1: ACF of MA1(ma=0.9)")
acf(ma1b,main="Fig2: ACF of MA1(ma=-0.9)")
acf(ma1c,main="Fig3: ACF of MA1(ma=0.5)")
acf(ma1d,main="Fig4: ACF of MA1(ma=-0.5)")
par(mfrow=c(2,2))
pacf(ma1a,main="Fig1: PACF of MA1(ma=0.9)")
pacf(ma1b,main="Fig2: PACF of MA1(ma=-0.9)")
pacf(ma1c,main="Fig3: PACF of MA1(ma=0.5)")
pacf(ma1d,main="Fig4: PACF of MA1(ma=-0.5)")
rm(list = ls())
set.seed(898)
ma2a1 <- arima.sim(list(order=c(0,0,2), ma=c(0.9,  0.4)), n=100)
set.seed(898)
ma2a2 <- arima.sim(list(order=c(0,0,2), ma=c(0.9, -0.4)), n=100)
set.seed(898)
ma2b1 <- arima.sim(list(order=c(0,0,2), ma=c(-.9, 0.4)), n=100)
set.seed(898)
ma2b2 <- arima.sim(list(order=c(0,0,2), ma=c(-.9, -0.4)), n=100)
set.seed(898)
ma2c1 <- arima.sim(list(order=c(0,0,2), ma=c(0.5, 0.4)), n=100)
set.seed(898)
ma2c2 <- arima.sim(list(order=c(0,0,2), ma=c(0.5, -0.4)), n=100)
set.seed(898)
ma2d1 <- arima.sim(list(order=c(0,0,2), ma=c(-0.5, 0.4)), n=100)
set.seed(898)
ma2d2 <- arima.sim(list(order=c(0,0,2), ma=c(-0.5, -0.4)), n=100)
?arima.sim
par(mfrow = c(2,2))
plot(ma2a1, ylab="simulated value", main="MA2(0.9, 0,4)")
plot(ma2a2, ylab="simulated value", main="MA2(0.9,-0.4)")
plot(ma2b1, ylab="simulated value", main="MA2(-0.9,0.4)")
plot(ma2b2, ylab="simulated value", main="MA2(-0.9,-0.4)")
par(mfrow=c(3,2))
plot(ma1a,  ylab="simulated value", main=(expression(MA(1)~~~theta==+.9)))
acf(ma1a,  ylab="Autocorrelation", main="ACF of MA1(0.9)")
plot(ma2a1, ylab="simulated value", main="MA2(0.9, 0,4)")
acf(ma2a1, ylab="Autocorrelation", main="ACF of MA2(0.9, 0,4)")
plot(ma2a2, ylab="simulated value", main="MA2(0.9,-0.4)")
acf(ma2a2, ylab="Autocorrelation value", main="ACF MA2(0.9,-0.4)")
par(mfrow=c(2,2))
plot(ma2c2, ylab="simulated value", main="MA2(0.5,-0.4)")
hist(ma2c2, col="grey", ylab="simulated value", main="MA2(0.5,-0.4)")
acf(ma2c2, ylab="simulated value", main="MA2(0.5,-0.4)")
pacf(ma2c2, ylab="simulated value", main="MA2(0.5,-0.4)")
rm(list = ls())
ma2.fit <- arima(ma2c2, order=c(0,0,2))
set.seed(898)
ma2c2 <- arima.sim(list(order=c(0,0,2), ma=c(0.5, -0.4)), n=100)
ma2.fit <- arima(ma2c2, order=c(0,0,2))
summary(ma2.fit)
head(cbind(ma2c2, fitted(ma2.fit), ma2.fit$resid),10)
df<-data.frame(cbind(ma2c2, fitted(ma2.fit), ma2.fit$resid))
library(stargazer)
stargazer(df, type="text")
summary(ma2.fit$resid)
par(mfrow=c(2,2))
plot.ts(ma2.fit$resid, main="Residual Series",
ylab="residuals", col="navy")
hist(ma2.fit$resid, col="gray", main="Residuals")
acf(ma2.fit$resid, main="ACF of Residuals")
pacf(ma2.fit$resid, main="PACF of Residuals")
Box.test(ma2.fit$resid, type="Ljung-Box") # Box-Pierce test
set.seed(898)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
acf(x, main="")
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
acf(x, main="")
title("Autocorrelation of Time Series")
pacf(x, main="")
title("Partial Autocorrelation of Time Series")
arfit <- ar(x, method = "mle")
arfit$order
arfit$ar
sqrt(arfit$asy.var.coef)
CI <- arfit$ar + c(-2, 2) * sqrt(arfit$asy.var.coef)
polyroot(arfit$ar)
polyroot(c(1,-1,-0.4))
polyroot(c(1.0,0.5,0.25))
acf(arfit$resid[3:100], main="Autocorrelation of Time Series Residuals")
set.seed(898)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
arfit <- ar(x)
arfit$order
arfit$ar
arfit <- ar(x, method = "yw")
arfit$ar
arfit <- ar(x, method = "osl")
arfit <- ar(x, method = "ols")
arfit$order
arfit$ar
arfit <- ar(x, method = "mle", order = c(2, 0, 0))
?ar
set.seed(898)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
arfit$resid
arfit <- ar(x, method = "mle")
arfit$resid
arfit2 <- ar(x, method = "ols")
arfit2$resid
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
arfit <- ar(x, method = "mle")
arfit
set.seed(100)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
acf(x, main="")
pacf(x, main="")
arfit <- ar(x, method = "ols")
arfit$order
set.seed(100)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
set.seed(10)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
set.seed(150)
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
set.seed(100)
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
set.seed(100)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
acf(x, main="")
title("Partial Autocorrelation of Time Series")
pacf(x, main="")
acf(x, main="")
arfit <- ar(x, method = "mle")
arfit$order
arfit$ar
set.seed(100)
set.seed(100)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
arfit <- ar(x, method = "mle")
arfit$order
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
set.seed(200)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
plot.ts(x, xlab = "Simulated time period", ylab = "Simulated Value", main = "Simulated Time Series Model")
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
acf(x, main="")
pacf(x, main="")
arfit <- ar(x, method = "mle")
arfit$order
set.seed(898)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
arfit <- ar(x, method = "mle")
arfit$order
set.seed(100)
x <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma=0))
hist(x, xlab = "Simulated Value", main = "Histogram of Simulated Time Series")
acf(x, main="")
arfit <- ar(x, method = "mle")
arfit$order
arfit2 <- ar(x, method = "ols")
arfit2$oorder
arfit2$order
arfit3 <- ar(x, method = "yw")
arfit3$order
arfit$ar
sqrt(arfit$asy.var.coef)
arfit$ar + c(-2, 2) * sqrt(arfit$asy.var.coef)
5/6
set.seed(898)
x2 <- arima.sim(n = 100, list(ar = c(5/6, -1/6), ma = 0))
arfit2 <- ar(x2, method = "mle")
arfit2$order
arfit$ar
arfit2$ar
sqrt(arfit$asy.var.coef)
sqrt(arfit2$asy.var.coef)
polyroot(c(1, -arfit$ar))
arfit$aic
arfit$resid
acf(arfit$resid[2:100], main="Autocorrelation of Time Series Residuals")
hist(arfit$resid)
plot.ts(arfit$resid, main="Simulated Random Noise Time Series",col="blue", ylab="Values", xlab="Simulated Time #Period")
qqPlot(arfit$resid, main="QQ Plot of Residuals", ylab="Residuals")
library(ggplot2)
library(gridExtra)
library(grid)
library(car)
qqPlot(arfit$resid, main="QQ Plot of Residuals", ylab="Residuals")
#Autocorrelation Function of Residuals
acf(arfit$resid[2:100], main="Autocorrelation of Time Series Residuals")
#Histogram of Residuals
hist(arfit$resid)
#Time Series of Residuals
plot.ts(arfit$resid, main="Simulated Random Noise Time Series",col="blue", ylab="Values", xlab="Simulated Time #Period")
#QQ Plot of residuals
qqPlot(arfit$resid, main="QQ Plot of Residuals", ylab="Residuals")
resids <- arfit$resid[2:100] #subsetting to remove NA
acf(resids, main="Autocorrelation of Time Series Residuals")
hist(arfit$resids)
hist(resids)
par(mfrow = c(2,2))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
resids <- arfit$resid[2:100] #subsetting to remove NA
par(mfrow = c(2,2))
#Autocorrelation Function of Residuals
acf(resids, main="Autocorrelation of Time Series Residuals")
#Partial Autocorrelation Function of Residuals
pacf(resids, main = "Partial Autocorrelation of Time Series Residuals")
par(mfrow = c(2,2))
#Histogram of Residuals
hist(resids)
#QQ Plot of residuals
qqPlot(resids, main="QQ Plot of Residuals", ylab="Residuals")
par(mfrow = c(1,2))
#Histogram of Residuals
hist(resids)
#QQ Plot of residuals
qqPlot(resids, main="QQ Plot of Residuals", ylab="Residuals")
#Time Series of Residuals
par(mfrow = c(1,2))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
#Time Series of Residuals
par(mfrow = c(2,1))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
par(mfrow = c(2,1))
#Histogram of Residuals
hist(resids)
#QQ Plot of residuals
qqPlot(resids, main="QQ Plot of Residuals", ylab="Residuals")
resids <- arfit$resid[2:100] #subsetting to remove NA
par(mfrow = c(2,1))
#Autocorrelation Function of Residuals
acf(resids, main="Autocorrelation of Time Series Residuals")
#Partial Autocorrelation Function of Residuals
pacf(resids, main = "Partial Autocorrelation of Time Series Residuals")
#Time Series of Residuals
par(mfrow = c(2,1))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
par(mfrow = c(1,1))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
par(mfrow = c(2,2))
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
par(mfrow = c(1,2))
acf(resids, main="Autocorrelation of Time Series Residuals")
par(mfrow = c(2,1))
acf(resids, main="Autocorrelation of Time Series Residuals")
pacf(resids, main = "Partial Autocorrelation of Time Series Residuals")
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
hist(resids, main = "Histogram of TS Residuals")
qqPlot(resids, main="QQ Plot of Residuals", ylab="Residuals")
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
par(mfrow = c(2,1))
acf(resids, main="Autocorrelation of Time Series Residuals")
#Partial Autocorrelation Function of Residuals
pacf(resids, main = "Partial Autocorrelation of Time Series Residuals")
plot.ts(resids, main="Simulated Series Residuals",col="blue", ylab="Values", xlab="Simulated Time #Period")
plot(rnorm(100), type="l", main="Gaussian White Noise")
hist(resids, main = "Histogram of TS Residuals")
#QQ Plot of residuals
qqPlot(resids, main="QQ Plot of Residuals", ylab="Residuals")
qqnorm(resids)
par(mfrow = c(1,1))
qqnorm(resids)
CI <- arfit$ar + c(-2, 2) * sqrt(arfit$asy.var.coef)
CI
5/6
-1/6
polyroot(c(1, -arfit$ar))
arfit
setwd("~/Documents/271 Final")
library(ggplot2)
library(reshape2)
library(grid)
library(astsa)
library(forecast)
library(quantmod)
library(fGarch)
library(tseries)
series <- read.csv("series04.csv")
View(series)
series <- ts(series$X25182)
par(mfrow = c(2,2))
plot.ts(series, xlab = "Time Period", ylab = "Values", main = "Time Series Plot of Series 04")
hist(series, main = "Histogram of Series 04")
acf(series, main = "ACF of Series 04")
pacf(series, main = "PACF of Series 04")
decompose(series)
par(mfrow = c(3,2))
plot.ts(series, xlab = "Time Period", ylab = "Values", main = "Time Series of Series 04 Original")
plot.ts(log(series), xlab = "Time Period", ylab = "Values", main = "Log of Series 04")
plot.ts(diff(series), xlab = "Time Period", ylab = "Values", main = "First Difference Series 04")
plot.ts(diff(log(series)), xlab = "Time Period", ylab = "Values", main = "First Difference Log Series 04")
plot.ts(diff(series, d = 2), xlab = "Time Period", ylab = "Values", main = "Second Difference Series 04")
plot.ts(diff(log(series), d =2), xlab = "Time Period", ylab = "Values", main = "Second Difference Log Series 04")
```
par(mfrow = c(2,2))
acf(diff(series), main = "ACF of First Difference Series")
acf(diff(log(series)), main = "ACF of First Difference Log")
pacf(diff(series), main = "PACF of First Difference")
pacf(diff(log(series)), main = "PACF of First Difference Log")
plot.ts(diff(log(series), lag = 6), xlab = "Time Period", ylab = "Values", main = "First Difference of Log Series with Seasonal Lag")
hist(diff(log(series), lag = 6), main = "Histogram of First Difference Log with Sesasonal Lag")
acf(diff(log(series), lag = 6), main = "ACF of First Difference Log with Seasonal Lag")
pacf(diff(log(series), lag = 6), main = "PACF of First Difference Log with Seasonal Lag")
mod <- auto.arima(log(series))
mod
?arima
get.best.arima.seas <- function(x.ts, maxord = c(1,1,1,1,1,1)) {
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3])
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in maxord[6])
{
fit <- arima(x.ts, order = c(p, d, q), seas = list(order = c(P,D,Q), frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic)
{
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p, d, q, P, D, Q)
}
}
list(best.aic, best.fit, best.model)
}
get.best.arima.seas(log(series), maxord = rep(6, 2))
get.best.arima.seas(log(series), maxord = rep(6, 6))
rm(list = ls())
series <- read.csv("series03.csv")
series <- ts(series$X9.88)
mod <- auto.arima(series)
mod
plot.ts(diff(series, d = 2))
hist(dff(series, d = 2))
hist(diff(series, d = 2))
acf(diff(series, d = 2))
pacf(diff(series, d = 2))
t(confint(mod))
par(mfrow = c(2,2))
par(mfrow = c(2,1))
acf(mod$residuals)
pacf(mod$residuals)
mod2 <- auto.arima(log(series))
mod2
acf(diff(series, d =2))
pacf(diff(series, d =2))
mod2 <- arima(series, order = c(0, 2, 1))
mmod
mod2
t(confint(mod2))
mod2 <- arima(series, order = c(0, 2, 12))
mod2 <- arima(series, order = c(0, 2, 2))
t(confint(mod2))
mod2 <- arima(series, order = c(1, 2, 1))
t(confint(mod2))
mod2 <- arima(series, order = c(0, 2, 1))
acf(mod2$residuals)
pacf(mod2$residuals)
